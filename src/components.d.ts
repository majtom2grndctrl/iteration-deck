/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface IterationDeck {
        /**
          * Currently active slide index
          * @default 0
         */
        "activeIndex": number;
        /**
          * Unique identifier for this iteration deck
         */
        "deckId": string;
        /**
          * Additional context for stakeholder presentations
         */
        "description": string | undefined;
        /**
          * Label for this deck in the toolbar
         */
        "label": string | undefined;
        /**
          * Optional AI prompt context for generation tracking
         */
        "prompt": string | undefined;
    }
    interface IterationDeckSlide {
        /**
          * Optional AI prompt refinements for this specific variation
         */
        "aiPrompt": string | undefined;
        /**
          * AI generation confidence score (0-1, dev mode only)
         */
        "confidence": number | undefined;
        /**
          * Label for this slide/variation
         */
        "label": string;
        /**
          * Design rationale, AI feedback, or iteration insights
         */
        "notes": string | undefined;
    }
    interface IterationDeckToolbar {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
}
declare global {
    interface HTMLIterationDeckElement extends Components.IterationDeck, HTMLStencilElement {
    }
    var HTMLIterationDeckElement: {
        prototype: HTMLIterationDeckElement;
        new (): HTMLIterationDeckElement;
    };
    interface HTMLIterationDeckSlideElement extends Components.IterationDeckSlide, HTMLStencilElement {
    }
    var HTMLIterationDeckSlideElement: {
        prototype: HTMLIterationDeckSlideElement;
        new (): HTMLIterationDeckSlideElement;
    };
    interface HTMLIterationDeckToolbarElement extends Components.IterationDeckToolbar, HTMLStencilElement {
    }
    var HTMLIterationDeckToolbarElement: {
        prototype: HTMLIterationDeckToolbarElement;
        new (): HTMLIterationDeckToolbarElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "iteration-deck": HTMLIterationDeckElement;
        "iteration-deck-slide": HTMLIterationDeckSlideElement;
        "iteration-deck-toolbar": HTMLIterationDeckToolbarElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface IterationDeck {
        /**
          * Currently active slide index
          * @default 0
         */
        "activeIndex"?: number;
        /**
          * Unique identifier for this iteration deck
         */
        "deckId": string;
        /**
          * Additional context for stakeholder presentations
         */
        "description"?: string | undefined;
        /**
          * Label for this deck in the toolbar
         */
        "label"?: string | undefined;
        /**
          * Optional AI prompt context for generation tracking
         */
        "prompt"?: string | undefined;
    }
    interface IterationDeckSlide {
        /**
          * Optional AI prompt refinements for this specific variation
         */
        "aiPrompt"?: string | undefined;
        /**
          * AI generation confidence score (0-1, dev mode only)
         */
        "confidence"?: number | undefined;
        /**
          * Label for this slide/variation
         */
        "label": string;
        /**
          * Design rationale, AI feedback, or iteration insights
         */
        "notes"?: string | undefined;
    }
    interface IterationDeckToolbar {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "iteration-deck": IterationDeck;
        "iteration-deck-slide": IterationDeckSlide;
        "iteration-deck-toolbar": IterationDeckToolbar;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "iteration-deck": LocalJSX.IterationDeck & JSXBase.HTMLAttributes<HTMLIterationDeckElement>;
            "iteration-deck-slide": LocalJSX.IterationDeckSlide & JSXBase.HTMLAttributes<HTMLIterationDeckSlideElement>;
            "iteration-deck-toolbar": LocalJSX.IterationDeckToolbar & JSXBase.HTMLAttributes<HTMLIterationDeckToolbarElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
